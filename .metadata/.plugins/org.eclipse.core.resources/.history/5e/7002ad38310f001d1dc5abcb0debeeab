#include"bsp_sccb.h"

/********************************************************************
* 函数名：SCCB_Start
* 描述：SCCB 起始信号
* 输入：无
* 输出：无
* 注意：内部调用
********************************************************************/
static int SCCB_Start(void)
{
	SDA_H;
	SCL_H;
	SCCB_delay();
	if (!SDA_read)
	return DISABLE; /* SDA 线为低电平则总线忙, 退出*/
	SDA_L;
	SCCB_delay();
	if (SDA_read)
	return DISABLE; /* SDA 线为高电平则总线出错, 退出*/
	SDA_L;
	SCCB_delay();
	return ENABLE;
}

/********************************************************************
* 函数名：SCCB_Stop
* 描述：SCCB 停止信号
* 输入：无
* 输出：无
* 注意：内部调用
********************************************************************/
static void SCCB_Stop(void)
{
	SCL_L;
	SCCB_delay();
	SDA_L;
	SCCB_delay();
	SCL_H;
	SCCB_delay();
	SDA_H;
	SCCB_delay();
}

/********************************************************************
* 函数名：SCCB_WaitAck
* 描述：SCCB 等待应答
* 输入：无
* 输出：返回为:=1 有ACK,=0 无ACK
* 注意：内部调用
********************************************************************/
static int SCCB_WaitAck(void)
{
	SCL_L;
	SCCB_delay();
	SDA_H;
	SCCB_delay();
	SCL_H;
	SCCB_delay();
	if (SDA_read) {
		SCL_L;
		return DISABLE;
	}
	SCL_L;
	return ENABLE;
}

/**************************************************************************
* 函数名：SCCB_WriteByte
* 描述：写一字节数据
* 输入：-WriteAddress: 待写入地址- SendByte: 待写入数据- DeviceAddress: 器件类型
* 输出：返回为:=1 成功写入,=0 失败
* 注意：无
*************************************************************/
int SCCB_WriteByte( uint16_t WriteAddress , uint8_t SendByte )
{
	if (!SCCB_Start()) {
		return DISABLE;
	}
	SCCB_SendByte( DEV_ADR ); /* 器件地址*/
	if ( !SCCB_WaitAck() ) {
		SCCB_Stop();
		return DISABLE;
	}
	SCCB_SendByte((uint8_t)(WriteAddress & 0x00FF)); /* 设置低起始地址*/
	SCCB_WaitAck();
	SCCB_SendByte(SendByte);
	SCCB_WaitAck();
	SCCB_Stop();
	return ENABLE;
}

/********************************************************************
* 函数名：SCCB_NoAck
* 描述：SCCB 无应答方式
* 输入：无
* 输出：无
* 注意：内部调用
********************************************************************/
static void SCCB_NoAck(void)
{
	SCL_L;
	SCCB_delay();
	SDA_H;
	SCCB_delay();
	SCL_H;
	SCCB_delay();
	SCL_L;
	SCCB_delay();
}

/************************************************************************
* 函数名：SCCB_ReadByte
* 描述：读取一串数据
* 输入：- pBuffer: 存放读出数据- length: 待读出长度- ReadAddress: 待读出地址-
DeviceAddress: 器件类型
* 输出：返回为:=1 成功读入,=0 失败
* 注意：无
***********************************************************************/
int SCCB_ReadByte(uint8_t* pBuffer, uint16_t length, uint8_t ReadAddress)
{
	if (!SCCB_Start()) {
		return DISABLE;
	}
	SCCB_SendByte( DEV_ADR ); /* 器件地址*/
	if ( !SCCB_WaitAck() ) {
		SCCB_Stop();
		return DISABLE;
	}
	SCCB_SendByte( ReadAddress ); /* 设置低起始地址*/
	SCCB_WaitAck();
	SCCB_Stop();
	if (!SCCB_Start()) {
		return DISABLE;
	}
	SCCB_SendByte( DEV_ADR + 1 ); /* 器件地址*/
	if (!SCCB_WaitAck()) {
		SCCB_Stop();
		return DISABLE;
	}
	while (length) {
	*pBuffer = SCCB_ReceiveByte();
	if (length == 1) {
		SCCB_NoAck();
	} else {
		SCCB_Ack();
	}
	pBuffer++;
	length--;
	}
	SCCB_Stop();
	return ENABLE;
}
